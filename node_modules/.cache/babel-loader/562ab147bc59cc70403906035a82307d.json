{"ast":null,"code":"var _jsxFileName = \"/Users/tempobeast/Development/code/phase-3/phase-3-project-track-tracker/track-tracker-frontend/src/AthleteContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport WorkoutList from \"./WorkoutList\";\nimport AthleteList from \"./AthleteList\";\nimport CreateNewAthleteForm from './CreateNewAthleteForm';\nimport Nav from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AthleteContainer() {\n  _s();\n\n  const [athletes, setAthletes] = useState([]);\n  const [selectedAthlete, setSelectedAthlete] = useState(\"\");\n  const [workouts, setWorkouts] = useState([]);\n  const [workoutLogs, setWorkoutLogs] = useState([]);\n  const [addAthlete, setAddAthlete] = useState(false); // const [addWorkout, setAddWorkout] = useState (false)\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/athletes\").then(res => res.json()).then(data => setAthletes(data));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/workouts\").then(res => res.json()).then(data => setWorkouts(data));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/log_entries\").then(res => res.json()).then(data => setWorkoutLogs(data));\n  }, []);\n\n  function onLogSubmit(formData) {\n    fetch(\"http://localhost:9292/log_entries\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"athlete_id\": formData.athlete_id,\n        \"workout_rating\": formData.rating,\n        \"mileage\": formData.mileage,\n        \"details\": formData.details,\n        \"comments\": formData.comments,\n        \"workout_id\": formData.workout_id\n      })\n    }).then(res => res.json()).then(data => setWorkoutLogs([...workoutLogs, data]));\n  }\n\n  function onLogDelete(id) {\n    fetch(`http://localhost:9292/log_entries/${id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(deleteEntry => {\n      const newWorkoutLogs = workoutLogs.filter(entry => entry.id !== deleteEntry.id);\n      setWorkoutLogs(newWorkoutLogs);\n    });\n  }\n\n  function onNewAthleteSubmit(formData) {\n    fetch(\"http://localhost:9292/athletes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"name\": formData.name,\n        \"age\": formData.age\n      })\n    }).then(res => res.json()).then(newAthlete => {\n      setAthletes([...athletes, newAthlete]), console.log(newAthlete);\n    });\n  }\n\n  function onAddAthleteClick(e) {\n    setAddAthlete(!addAthlete);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"athlete_container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onAddAthleteClick: onAddAthleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), addAthlete ? /*#__PURE__*/_jsxDEV(CreateNewAthleteForm, {\n      setAddAthlete: setAddAthlete,\n      onNewAthleteSubmit: onNewAthleteSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(AthleteList, {\n      athletes: athletes,\n      setSelectedAthlete: setSelectedAthlete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WorkoutList, {\n      workouts: workouts,\n      workoutLogs: workoutLogs,\n      onLogSubmit: onLogSubmit,\n      selectedAthlete: athletes[selectedAthlete - 1],\n      athletes: athletes,\n      onLogDelete: onLogDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AthleteContainer, \"PGtUCosmPfjp9CUw113CJa0w18g=\");\n\n_c = AthleteContainer;\nexport default AthleteContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AthleteContainer\");","map":{"version":3,"names":["React","useState","useEffect","WorkoutList","AthleteList","CreateNewAthleteForm","Nav","AthleteContainer","athletes","setAthletes","selectedAthlete","setSelectedAthlete","workouts","setWorkouts","workoutLogs","setWorkoutLogs","addAthlete","setAddAthlete","fetch","then","res","json","data","onLogSubmit","formData","method","headers","body","JSON","stringify","athlete_id","rating","mileage","details","comments","workout_id","onLogDelete","id","deleteEntry","newWorkoutLogs","filter","entry","onNewAthleteSubmit","name","age","newAthlete","console","log","onAddAthleteClick","e"],"sources":["/Users/tempobeast/Development/code/phase-3/phase-3-project-track-tracker/track-tracker-frontend/src/AthleteContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport WorkoutList from \"./WorkoutList\";\nimport AthleteList from \"./AthleteList\";\nimport CreateNewAthleteForm from './CreateNewAthleteForm';\nimport Nav from './Nav';\n\nfunction AthleteContainer () {\n\n    const [athletes, setAthletes] = useState([])\n    const [selectedAthlete, setSelectedAthlete] = useState(\"\")\n    const [workouts, setWorkouts] = useState([])\n    const [workoutLogs, setWorkoutLogs] = useState([])\n    const [addAthlete, setAddAthlete] = useState (false)\n  // const [addWorkout, setAddWorkout] = useState (false)\n\n    useEffect(() => {\n        fetch(\"http://localhost:9292/athletes\")\n        .then((res) => res.json())\n        .then((data) => setAthletes(data))\n    }, [])\n\n    useEffect(() => {\n        fetch(\"http://localhost:9292/workouts\")\n        .then((res) => res.json())\n        .then((data) => setWorkouts(data))\n    }, [])\n\n    useEffect(() => {\n        fetch(\"http://localhost:9292/log_entries\")\n        .then((res) => res.json())\n        .then((data) => setWorkoutLogs(data))\n    }, [])\n\n\n    function onLogSubmit(formData) {\n        fetch(\"http://localhost:9292/log_entries\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"athlete_id\": formData.athlete_id,\n                \"workout_rating\": formData.rating,\n                \"mileage\": formData.mileage,\n                \"details\": formData.details,\n                \"comments\": formData.comments,\n                \"workout_id\": formData.workout_id\n            }),\n        })\n        .then((res) => res.json())\n        .then((data) => setWorkoutLogs([...workoutLogs, data]))\n    }\n\n    function onLogDelete(id) {\n        fetch(`http://localhost:9292/log_entries/${id}`, {\n            method: \"DELETE\",\n        })\n        .then(res => res.json())\n        .then((deleteEntry) => {\n            const newWorkoutLogs = workoutLogs.filter((entry) => entry.id !== deleteEntry.id);\n            setWorkoutLogs(newWorkoutLogs)\n        })\n        \n    }\n\n    function onNewAthleteSubmit(formData) {\n        fetch(\"http://localhost:9292/athletes\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"name\": formData.name,\n                \"age\": formData.age\n            })\n        })\n        .then ((res) => res.json())\n        .then ((newAthlete) => {\n            setAthletes([...athletes, newAthlete]),\n            console.log(newAthlete)\n        })\n    }\n\n    function onAddAthleteClick(e) {\n        setAddAthlete(!addAthlete)\n      }\n\n    return (\n        <div id=\"athlete_container\">\n            <Nav onAddAthleteClick={onAddAthleteClick}/>\n            {addAthlete ? <CreateNewAthleteForm setAddAthlete={setAddAthlete} onNewAthleteSubmit={onNewAthleteSubmit}/> : null}\n            <AthleteList athletes={athletes} setSelectedAthlete={setSelectedAthlete}/>\n            <WorkoutList workouts={workouts} workoutLogs={workoutLogs} onLogSubmit={onLogSubmit} selectedAthlete={athletes[selectedAthlete - 1]} athletes={athletes} onLogDelete={onLogDelete}/>\n        </div>\n    )\n}\n\nexport default AthleteContainer"],"mappings":"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"},"metadata":{},"sourceType":"module"}